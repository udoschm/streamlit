import streamlit as st
from PIL import Image
from streamlit_extras.switch_page_button import switch_page

st.set_page_config(
    page_title="Hashcat best64 Regel",
    page_icon="üìà",
    initial_sidebar_state="collapsed",
    layout="wide"
)

hide_streamlit_style = """
            <style>
            #MainMenu {visibility: hidden;}
            footer {visibility: hidden;}
            </style>
            """
st.markdown(hide_streamlit_style, unsafe_allow_html=True)

st.markdown(
    """
    <h1 style='text-align: center;'>
    Hashcat best64 Regel üôÄ
    </h1>
    """,
    unsafe_allow_html=True
)
col1, col2 = st.columns(2)
# Picture and Text
st.markdown(
    """
    <div align="center">

    | Anzahl der Passw√∂rter in der Zieldatei | 26 067 879        |
    |----------------------------------------|-------------------|
    | Geknackte Passw√∂rter                   | 11 024 306 (18.22%) |

    </div><br><br><br>
    """,
    unsafe_allow_html=True
)

col3, col4 = st.columns(2)

col3.markdown(
    """
    <div align="center">

    | Regel | Funktionsweise                                                        | Beispiel  |
    |-------|-----------------------------------------------------------------------|-----------|
    | :     | Das Wort wird unver√§ndert in die erweiterte Passwortliste geschrieben | Passwort  |
    | $1    | An das Wort wird die Zahl "1" angeh√§ngt                               | Passwort1 |
    | u     | Alle Buchstaben werden gro√ügeschrieben                                | PASSWORT  |
    | l     | Alle Buchstaben werden kleingeschrieben                               | passwort  |
    | so0   | Der Buchstabe "o" wird durch die Zahl 0 ersetzt                       | Passw0rt  |
    | f     | Alle Gro√übuchstaben werden zu Kleinbuchstaben und umgekehrt           | pASSWORT  |

    </div><br>
""",
    unsafe_allow_html=True
)


col4.markdown(
    """
Hashcat bietet die Funktionalit√§t eine bestehende Passwortliste mit verschiedensten Regeln zu erweitern.
Die Hashcat-Regel "best64", enth√§lt √ºber 80 verschiedene Regeln. \n
Wenn die best64-Regel auf ein Wort angewendet wird entstehen also √ºber 80 neue W√∂rter.
Um die Funktionsweise der Regeln besser verstehen zu k√∂nnen, werden insgesamt 6 beispielhafte Regeln auf das Wort 
"Passwort" angewendet.
"""
)



col5, col6 = st.columns(2)


col5.markdown(
"""    
    <div align="center">

    | Entropie in Bits | St√§rke       |
    |------------------|--------------|
    | 0-64             | Sehr schwach |
    | 64-80            | Schwach      |
    | 80-112           | M√§√üig        |
    | 112-128          | Stark        |
    | > 128            | Sehr Stark   |

    </div><br>
    """,
    unsafe_allow_html=True
)

col6.markdown(
    """
    In den folgenden Abs√§tzen wird der Begriff Entropie angesprochen, dies ist ein Wert welcher 
    die St√§rke eines Passwortes definiert. Um so h√∂her Entropie Wert ist, um so sicherer wird ein Passwort angesehen.
    Der Passwortmanager KeePass stuft die Sicherheit der Passw√∂rter wie folgt ein (siehe linke Tabelle).
"""
)


col7, col8 = st.columns(2)

image = "steamlit/images/hc_best64/train_best64_sort_utf-8_repair_pw_complexity.jpg"
col7.image(image, caption='Passwortkomplexit√§t aller Passw√∂rter in der generierten Liste', use_column_width=True)

col8.markdown(
    """
    Man kann in der Abbildung erkennen, dass die generierte Passwortliste alle Entropie bereiche abdeckt.
    Das Diagramm zeigt auch an, dass sich die Entropie stark auf die untere H√§lfte konzentriert.
    Dies bedeutet nach der Definition von KeePass, dass die meisten generierten Passw√∂rter sehr schwach sind.
    
    
"""
)

col9, col10 = st.columns(2)

image = "steamlit/images/hc_best64/crackedpw_train_best64_sort_cut_repair_pw_complexity.jpg"
col9.image(image, caption='Passwortkomplexit√§t der geknackten Passw√∂rter', use_column_width=True)

col10.markdown(
    """ 
Nun zu den Passw√∂rtern, welche mithilfe der best64-Passwortliste geknackt werden konnten.
Es wurde hier das beste Ergebnis des kompletten Projekts erzielt.
Mit dieser Passwortliste konten 11 024 306 Passw√∂rter, was 18.22% entspricht in Klartext umgewandelt werden.
Man kann hier deutlich erkennen, dass viele Passw√∂rter mit einer Entropie von unter 20 geknackt wurden.
Wenn man die obere Abbildung mit dieser vergleicht, l√§sst sich ein Zusammenhang feststellen.
Die Graphen schlagen bei der gleichen Entropie werden aus.
Das ist nat√ºrlich nicht verwunderlich, wenn in der Passwortliste, welche zum Knacken benutzt wurde, viele Passw√∂rter
mit Entropie 30 sind das auch viele Passw√∂rter mit einer Entropie von 30 gefunden worden.

"""
)

col11, col12 = st.columns(2)

image = "steamlit/images/hc_best64/train_best64_sort_utf-8_repair_normalverteilung_passwortl√§nge.jpg"
col11.image(image, caption='Verteilung der Passwortl√§nge in der Hashcat generierten Liste', use_column_width=True)

col12.markdown(
    """    
Es ist hier die L√§ngenverteilung der Passw√∂rter in der Passwortliste, welche mit der best64-Regel erstellt wurde zu
sehen. Man kann hier eine relative sch√∂ne Normalverteilung sehen. Das Hoch ist bei der Passwortl√§nge 10 mit 16,77%.
Eine normal verteile Liste ist gut, es Passw√∂rter mit jeder L√§nge enth√§lt, aber im mittleren Bereich am meisten 
Passw√∂rter beinhaltet.
"""
)



col13, col14 = st.columns(2)

image = "steamlit/images/hc_best64/crackedpw_train_best64_sort_cut_repair_normalverteilung_passwortl√§nge.jpg"
col13.image(image, caption='Verteilung der Passwortl√§nge der geknackten Passw√∂rter', use_column_width=True)

col14.markdown(
    """
    Es ist hier die Verteilung der Passw√∂rter dargestellt, welche mithilfe der best64-Liste geknackt werden konnten.
    Man kann deutlich erkennen, das vor allem Passw√∂rter mit der L√§nge 6 bis 10 geknackt worden.
    Auch die urspr√ºngliche Liste hatte viele Passw√∂rter in diesem Bereich, das Ergebnis ist also nicht verwunderlich.

"""
)

col15, col16 = st.columns(2)
col17, col18 = st.columns(2)

if col15.button("Ab zu den 17 Hashcat Regeln"):
    switch_page("Hashcat 17 Regeln")
if col17.button("Zur√ºck"):
    switch_page("Home")


import streamlit as st
from PIL import Image
from streamlit_extras.switch_page_button import switch_page

st.set_page_config(
    page_title="Hashcat erweiterte top10-Regel",
    page_icon="üìà",
    initial_sidebar_state="collapsed",
    layout="wide"
)

hide_streamlit_style = """
            <style>
            #MainMenu {visibility: hidden;}
            footer {visibility: hidden;}
            </style>
            """
st.markdown(hide_streamlit_style, unsafe_allow_html=True)

st.markdown(
    """
    <h1 style='text-align: center;'>
    Hashcat erweiterte top10-Regel üòº
    </h1>
    """,
    unsafe_allow_html=True
)
col1, col2 = st.columns(2)
# Picture and Text
st.markdown(
    """
    <div align="center">

    | Anzahl der Passw√∂rter in der Zieldatei | 26 067 879        |
    |----------------------------------------|-------------------|
    | Geknackte Passw√∂rter                   | 5 386 630 (8,90%) |

    </div><br><br><br>
    """,
    unsafe_allow_html=True
)

col3, col4 = st.columns(2)

col3.markdown(
    """
    <div align="center">

    | Regel | Funktionsweise                                                        | Beispiel  |
    |-------|-----------------------------------------------------------------------|-----------|
    | :     | Das Wort wird unver√§ndert in die erweiterte Passwortliste geschrieben | Passwort  |
    | $1    | An das Wort wird die Zahl "1" angeh√§ngt                               | Passwort1 |
    | u     | Alle Buchstaben werden gro√ügeschrieben                                | PASSWORT  |
    | l     | Alle Buchstaben werden kleingeschrieben                               | passwort  |
    | so0   | Der Buchstabe "o" wird durch die Zahl 0 ersetzt                       | Passw0rt  |
    | f     | Alle Gro√übuchstaben werden zu Kleinbuchstaben und umgekehrt           | pASSWORT  |

    </div><br>
""",
    unsafe_allow_html=True
)


col4.markdown(
    """
Hashcat bietet die Funktionalit√§t, eine bestehende Passwortliste mit verschiedensten Regeln zu erweitern.
Die Hashcat-Regel "top10", enth√§lt insgesamt 10 verschiedene Regeln. \n
Wenn die top10-Regel auf ein Wort angewendet wird, entstehen also insgesamt 10 neue W√∂rter.
Die top10-Regel wurde um insgesamt 7 Regeln erweitert, um noch mehr Ergebnisse zu erzielen.
Um die Funktionsweise der Regeln besser verstehen zu k√∂nnen, werden insgesamt 6 beispielhafte Regeln auf das Wort 
"Passwort" angewendet.
"""
)



col5, col6 = st.columns(2)


col5.markdown(
"""    
    <div align="center">

    | Entropie in Bits | St√§rke       |
    |------------------|--------------|
    | 0-64             | Sehr schwach |
    | 64-80            | Schwach      |
    | 80-112           | M√§√üig        |
    | 112-128          | Stark        |
    | > 128            | Sehr Stark   |

    </div><br>
    """,
    unsafe_allow_html=True
)

col6.markdown(
    """
    In den folgenden Abs√§tzen wird der Begriff Entropie angesprochen, dies ist ein Wert, welcher 
    die St√§rke eines Passwortes definiert. Um so h√∂her Entropie-Wert ist, um so sicherer wird ein Passwort angesehen.
    Der Passwortmanager KeePass stuft die Sicherheit der Passw√∂rter wie folgt ein (siehe linke Tabelle).
"""
)


col7, col8 = st.columns(2)

image = "steamlit/images/hc_top10/hc_best15_sort_utf-8_repair_pw_complexity.jpg"
col7.image(image, caption='Passwortkomplexit√§t aller Passw√∂rter in der generierten Liste', use_column_width=True)

col8.markdown(
    """
In der dieser Abbildung ist die Passwortkomplexit√§t der generierten Passwortliste in Entropie-Bits dargestellt.    
Man kann anhand der Abbildung erkennen, dass die meisten Passw√∂rter in der von Hashcat generierten Liste, sich in dem
Bereich zwischen 20 und 40 Entropie-Bits bewegt. Das bedeutet das eine Liste mit vielen sehr schwachen Passw√∂rtern
generiert wurde.
Mit dieser Passwortliste konnten insgesamt 5 386 630 Passw√∂rter erraten werden, was 8,90% entspricht.
"""
)

col9, col10 = st.columns(2)

image = "steamlit/images/hc_top10/crackedpw_hc_best15_sort_cut_repair_pw_complexity.jpg"
col9.image(image, caption='Passwortkomplexit√§t der geknackten Passw√∂rter', use_column_width=True)

col10.markdown(
    """ 
Das hier links dargestellte Diagramm zeigt die Entropie der geknackten Passw√∂rter auf.       
Man kann hier deutlich erkennen, dass fast ausnahmslos Passw√∂rter mit einer sehr schwachen Entropie geknackt wurden.
Dies hat den Hintergrund, dass sich die Verteilung in der generierten Passwortliste auch haupts√§chlich in diesem Bereich
bewegt. Ein weiterer m√∂glicher Grund ist, es das schwache Passw√∂rter leichter gecrackt werden k√∂nnen. Dies liegt daran, 
dass ein Passwort mit niedriger Entropie einen kleineren Zeichenraum besitzen und somit die Wahrscheinlichkeit das 
Passwort zu erraten h√∂her ist, da es weniger M√∂glichkeiten gibt.
"""
)

col11, col12 = st.columns(2)

image = "steamlit/images/hc_top10/hc_best15_sort_utf-8_repair_normalverteilung_passwortl√§nge.jpg"
col11.image(image, caption='Verteilung der Passwortl√§nge in der Hashcat generierten Liste', use_column_width=True)

col12.markdown(
    """    
Die von Hashcat generierte Passwortliste wurde au√üerdem, auf die Verteilung der L√§nge je Passwort untersucht.
Jedes Passwort wurde entsprechend einkategorisiert, diese Kategorisierung wird hier im Diagramm aufgezeigt.
Man kann der Darstellung entnehmen, dass die Passwortl√§ngen relativ gleich verteilt sind.
In Deutschland benutzen 14% der Menschen ein Passwort, was maximal 8 Zeichen hat und 35% der deutschen Bev√∂lkerung 
hat ein Passwort mit einer maximalen L√§nge von 10 Zeichen.
√úbertr√§gt man diese Informationen auf die Verteilung der Passwortliste, h√§tte man h√∂chstwahrscheinlich gute Chancen
viele Passw√∂rter von Deutschen zu knacken, da hier die Verteilung √§hnlich ist.
Die Qualit√§t der Passw√∂rter muss nat√ºrlich mit ber√ºcksichtigt werden.
"""
)



col13, col14 = st.columns(2)

image = "steamlit/images/hc_top10/crackedpw_hc_best15_sort_cut_repair_normalverteilung_passwortl√§nge.jpg"
col13.image(image, caption='Verteilung der Passwortl√§nge der geknackten Passw√∂rter', use_column_width=True)

col14.markdown(
    """
Nun zu den Ergebnissen, welche Passwortl√§ngen durch die generierte Liste jeweils herausgefunden werden konnten.        
Hier kann man erkennen, dass die erweiterte top10-Passwortliste haupts√§chlich Passw√∂rter der L√§nge 6,7,8,9,10 knacken
konnte. Dieses Ergebnis ist nicht verwunderlich, wenn man es mit dem Diagramm mit der Entropie vergleicht.
Die Passwortl√§nge ist ein Faktor, welcher mit in die Berechnung der Entropie mit einflie√üt.
Des Weiteren beinhaltet die von Hashcat generierte Liste auch zu einem hohen Prozentsatz Passw√∂rter mit dieser L√§nge, 
was diese Verteilung erkl√§rt.
"""
)

col15, col16 = st.columns(2)
col17, col18 = st.columns(2)

if col15.button("Ab zur Hashcat Best 64 Regel"):
    switch_page("Hashcat Best 64 Regel")
if col17.button("Zur√ºck"):
    switch_page("Home")


st.markdown(
    """
    <style>
    abc {
    font-size: 12px; 
    } 
    </style>
    <abc>
    Quellen: <br>
    https://de.statista.com/statistik/daten/studie/988439/umfrage/laenge-von-passwoertern-in-deutschland/#:~:text=Zum%20Zeitpunkt%20der%20Erhebung%20gaben,bis%20zu%20zehn%20Zeichen%20haben.
    </abc>
    """,
    unsafe_allow_html=True
)

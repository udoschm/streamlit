import streamlit as st
from streamlit_extras.switch_page_button import switch_page

st.set_page_config(
    page_title="GAN",
    page_icon="üñ•Ô∏è",
    initial_sidebar_state="collapsed",
    # layout="wide"
)

hide_streamlit_style = """
            <style>
            #MainMenu {visibility: hidden;}
            footer {visibility: hidden;}
            </style>
            """
st.markdown(hide_streamlit_style, unsafe_allow_html=True)

st.write("# Funktionsweise des Generative Adversarial Network (GAN) üñ•Ô∏è")


st.markdown(
    """
    Ein Generative Adversarial Network besteht aus zwei Teilen, der Generator und der Diskriminator. Der Generator, wie 
    der Name schon vermuten l√§sst, generiert Dinge, in diesem Fall Passw√∂rter. Der Diskriminator lernt zwischen den 
    vom Generator erzeugten Passw√∂rtern und echten aus der `rockyou.txt` zu unterscheiden.\
    In diesem Netzwerk verliert immer einer der beiden Teile. Dies wird durch eine Verlustfunktion erreicht.
    
    ## Diskriminator 
    Der Diskriminator ist in ein Klassifizierer. Er versucht zwischen echten Passw√∂rtern und den Passw√∂rtern, die vom 
    Generator erzeugt wurden, unterscheiden. Der Diskriminator muss allerdings trainiert werden. Das passiert, indem der
    Generator versucht Passw√∂rter zu erzeugen oder ein Passwort aus der Trainingsdatei genommen wird. Dann versucht der 
    Diskriminator zu erraten, ob das Passwort echt oder generiert wurde.\
    
    ## Generator
    Der Generator lernt durch Feedback des Diskriminators gef√§lschte Daten zu erzeugen. Damit wird der Generator immer 
    besser darin, den Diskriminator auszutricksen.\
    
    ## Training
    W√§hrend der Diskriminator trainiert wird, wird der Generator nicht ver√§ndert. W√§hrend er trainiert wird, lernt der 
    Diskriminator die Schw√§chen des Generators zu erkennen. \
    Auch wenn der Generator trainiert wird, wird der Diskriminator nicht ver√§ndert.\
    Ab einem bestimmten Punkt wird der Diskriminator immer schlechter, da er nicht mehr zwischen echten und erzeugten 
    Passw√∂rtern unterscheiden kann. Wenn der Diskriminator dem Generator schlechtes Feedback bereitstellt, kann der 
    Generator auch nicht mehr besser werden. Die Konsequenz daraus kann sein, dass der Generator immer schlechtere 
    Passw√∂rter generiert. 
    """
)

image = "streamlit/images/GAN.png"
st.image(image, caption='GAN Struktur', use_column_width=True)

st.markdown(
    """
    #### Was ist Hashcat?
    """
)

if st.button("Funktionsweise Hashcat"):
    switch_page("Funktionsweise Hashcat")
if st.button("Zur√ºck"):
    switch_page("Home")


st.divider()
st.markdown(
    """
    <style>
    body {
    font-size: 12px; 
    } 
    </style>
    <body>
    Quellen: <br>
    https://developers.google.com/machine-learning/gan/gan_structure
    </body>
    """,
    unsafe_allow_html=True
)
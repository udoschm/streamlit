import streamlit as st
from PIL import Image
from streamlit_extras.switch_page_button import switch_page

st.set_page_config(
    page_title="KI 200 000 Iterationen",
    page_icon="üìà",
    initial_sidebar_state="collapsed",
    layout="wide"
)

hide_streamlit_style = """
            <style>
            #MainMenu {visibility: hidden;}
            footer {visibility: hidden;}
            </style>
            """
st.markdown(hide_streamlit_style, unsafe_allow_html=True)

st.markdown(
    """
    <h1 style='text-align: center;'>
    KI 200 000 Iterationen ü§ñ
    </h1>
    """,
    unsafe_allow_html=True
)
col1, col2 = st.columns(2)
# Picture and Text
st.markdown(
    """
    <div align="center">

    | Anzahl der Passw√∂rter in der Zieldatei | 26 067 879        |
    |----------------------------------------|-------------------|
    | Geknackte Passw√∂rter                   | 2 342 307 (3.87%) |

    </div><br><br><br>
    """,
    unsafe_allow_html=True
)


col5, col6 = st.columns(2)


col5.markdown(
"""    
    <div align="center">

    | Entropie in Bits | St√§rke       |
    |------------------|--------------|
    | 0-64             | Sehr schwach |
    | 64-80            | Schwach      |
    | 80-112           | M√§√üig        |
    | 112-128          | Stark        |
    | > 128            | Sehr Stark   |

    </div><br>
    """,
    unsafe_allow_html=True
)

col6.markdown(
    """
    Auf dieser Seite werden die Ergebnisse der K√ºnstlichen Intelligenz mit 200 Tausend Iterationen thematisiert.
    Diese hat das beste Ergebnis bei den verschiedenen Iterationen geliefert.
    In den folgenden Abs√§tzen wird der Begriff Entropie angesprochen, dies ist ein Wert, welcher 
    die St√§rke eines Passwortes definiert. Umso h√∂her Entropie-Wert ist, desto sicherer wird ein Passwort.
    Der Passwortmanager KeePass stuft die Sicherheit der Passw√∂rter wie folgt ein (siehe linke Tabelle).
"""
)


col7, col8 = st.columns(2)

image = "streamlit/images/200k/200k_utf-8_repair_pw_complexity.jpg"
col7.image(image, caption='Passwortkomplexit√§t aller Passw√∂rter in der generierten Liste', use_column_width=True)

col8.markdown(
    """
In der dieser Abbildung ist die Passwortkomplexit√§t der generierten Passwortliste in Entropie-Bits dargestellt.
Es ist sehr deutlich zu sehen, dass die generierten Passw√∂rter eine sehr schwache Entropie aufweisen, 53,20% aller 
Passw√∂rter besitzt eine Entropie von unter 20.
"""
)

col9, col10 = st.columns(2)

image = "streamlit/images/200k/crackedpw_ai_200k_cut_repair_pw_complexity.jpg"
col9.image(image, caption='Passwortkomplexit√§t der geknackten Passw√∂rter', use_column_width=True)

col10.markdown(
    """ 
Dies spiegelt sich auch im Ergebnis wider, 77,27% der geknackten Passw√∂rter besitzen eine Entropie von unter 20.
Es werden keine Passw√∂rter mit einer Entropie von √ºber 40 gefunden.
Man kann also festhalten, dass die KI mit 200 000 Iterationen haupts√§chlich sehr schwache Passw√∂rter gefunden hat.
"""
)

col11, col12 = st.columns(2)

image = "streamlit/images/200k/200k_utf-8_repair_normalverteilung_passwortl√§nge.jpg"
col11.image(image, caption='Verteilung der Passwortl√§nge in der Hashcat generierten Liste', use_column_width=True)

col12.markdown(
    """    
Die Ergebnisse aus der Entropie lassen sich auch aus der L√§ngenverteilung ableiten, auch hier sieht man das die 
K√ºnstliche Intelligenz haupts√§chlich kurze Passw√∂rter generiert hat.
Der Grund hierf√ºr ist die Input-Datei, welche die 'rockyou.txt' war. Diese besitzt eine √§hnliche Verteilung.
"""
)



col13, col14 = st.columns(2)

image = "streamlit/images/200k/crackedpw_ai_200k_cut_repair_normalverteilung_passwortl√§nge.jpg"
col13.image(image, caption='Verteilung der Passwortl√§nge der geknackten Passw√∂rter', use_column_width=True)

col14.markdown(
    """
Diese Abbildung zeigt die L√§ngenverteilung der Ergebnisse, welche die KI in der LinkedIN Datei gefunden hat.
Man kann festhalten das fast ausschlie√ülich Passw√∂rter der L√§nge 6 - 9 und einige wenige der L√§nge 10 oder mehr gefunden
worden sind. Da die Datei, welche zum Cracken benutzt wurde, eine √§hnliche Verteilung aufweist, ist diese Verteilung 
nicht verwunderlich.
"""
)

col15, col16 = st.columns(2)
col17, col18 = st.columns(2)

if col15.button("Ab zur KI mit 500k Iterationen"):
    switch_page("KI-500 Iterationen")
if col17.button("Zur√ºck"):
    switch_page("Home")


